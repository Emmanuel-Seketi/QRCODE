// Code generated by ent, DO NOT EDIT.

package qrcodeanalytics

import (
	"qr_backend/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLTE(FieldID, id))
}

// IPAddress applies equality check predicate on the "ip_address" field. It's identical to IPAddressEQ.
func IPAddress(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldIPAddress, v))
}

// UserAgent applies equality check predicate on the "user_agent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldUserAgent, v))
}

// Location applies equality check predicate on the "location" field. It's identical to LocationEQ.
func Location(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldLocation, v))
}

// Device applies equality check predicate on the "device" field. It's identical to DeviceEQ.
func Device(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldDevice, v))
}

// ScannedAt applies equality check predicate on the "scanned_at" field. It's identical to ScannedAtEQ.
func ScannedAt(v time.Time) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldScannedAt, v))
}

// IPAddressEQ applies the EQ predicate on the "ip_address" field.
func IPAddressEQ(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldIPAddress, v))
}

// IPAddressNEQ applies the NEQ predicate on the "ip_address" field.
func IPAddressNEQ(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNEQ(FieldIPAddress, v))
}

// IPAddressIn applies the In predicate on the "ip_address" field.
func IPAddressIn(vs ...string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldIn(FieldIPAddress, vs...))
}

// IPAddressNotIn applies the NotIn predicate on the "ip_address" field.
func IPAddressNotIn(vs ...string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNotIn(FieldIPAddress, vs...))
}

// IPAddressGT applies the GT predicate on the "ip_address" field.
func IPAddressGT(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGT(FieldIPAddress, v))
}

// IPAddressGTE applies the GTE predicate on the "ip_address" field.
func IPAddressGTE(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGTE(FieldIPAddress, v))
}

// IPAddressLT applies the LT predicate on the "ip_address" field.
func IPAddressLT(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLT(FieldIPAddress, v))
}

// IPAddressLTE applies the LTE predicate on the "ip_address" field.
func IPAddressLTE(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLTE(FieldIPAddress, v))
}

// IPAddressContains applies the Contains predicate on the "ip_address" field.
func IPAddressContains(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldContains(FieldIPAddress, v))
}

// IPAddressHasPrefix applies the HasPrefix predicate on the "ip_address" field.
func IPAddressHasPrefix(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldHasPrefix(FieldIPAddress, v))
}

// IPAddressHasSuffix applies the HasSuffix predicate on the "ip_address" field.
func IPAddressHasSuffix(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldHasSuffix(FieldIPAddress, v))
}

// IPAddressEqualFold applies the EqualFold predicate on the "ip_address" field.
func IPAddressEqualFold(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEqualFold(FieldIPAddress, v))
}

// IPAddressContainsFold applies the ContainsFold predicate on the "ip_address" field.
func IPAddressContainsFold(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldContainsFold(FieldIPAddress, v))
}

// UserAgentEQ applies the EQ predicate on the "user_agent" field.
func UserAgentEQ(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "user_agent" field.
func UserAgentNEQ(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "user_agent" field.
func UserAgentIn(vs ...string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "user_agent" field.
func UserAgentNotIn(vs ...string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "user_agent" field.
func UserAgentGT(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "user_agent" field.
func UserAgentGTE(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "user_agent" field.
func UserAgentLT(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "user_agent" field.
func UserAgentLTE(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "user_agent" field.
func UserAgentContains(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "user_agent" field.
func UserAgentHasPrefix(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "user_agent" field.
func UserAgentHasSuffix(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentEqualFold applies the EqualFold predicate on the "user_agent" field.
func UserAgentEqualFold(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "user_agent" field.
func UserAgentContainsFold(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldContainsFold(FieldUserAgent, v))
}

// LocationEQ applies the EQ predicate on the "location" field.
func LocationEQ(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldLocation, v))
}

// LocationNEQ applies the NEQ predicate on the "location" field.
func LocationNEQ(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNEQ(FieldLocation, v))
}

// LocationIn applies the In predicate on the "location" field.
func LocationIn(vs ...string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldIn(FieldLocation, vs...))
}

// LocationNotIn applies the NotIn predicate on the "location" field.
func LocationNotIn(vs ...string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNotIn(FieldLocation, vs...))
}

// LocationGT applies the GT predicate on the "location" field.
func LocationGT(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGT(FieldLocation, v))
}

// LocationGTE applies the GTE predicate on the "location" field.
func LocationGTE(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGTE(FieldLocation, v))
}

// LocationLT applies the LT predicate on the "location" field.
func LocationLT(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLT(FieldLocation, v))
}

// LocationLTE applies the LTE predicate on the "location" field.
func LocationLTE(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLTE(FieldLocation, v))
}

// LocationContains applies the Contains predicate on the "location" field.
func LocationContains(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldContains(FieldLocation, v))
}

// LocationHasPrefix applies the HasPrefix predicate on the "location" field.
func LocationHasPrefix(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldHasPrefix(FieldLocation, v))
}

// LocationHasSuffix applies the HasSuffix predicate on the "location" field.
func LocationHasSuffix(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldHasSuffix(FieldLocation, v))
}

// LocationIsNil applies the IsNil predicate on the "location" field.
func LocationIsNil() predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldIsNull(FieldLocation))
}

// LocationNotNil applies the NotNil predicate on the "location" field.
func LocationNotNil() predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNotNull(FieldLocation))
}

// LocationEqualFold applies the EqualFold predicate on the "location" field.
func LocationEqualFold(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEqualFold(FieldLocation, v))
}

// LocationContainsFold applies the ContainsFold predicate on the "location" field.
func LocationContainsFold(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldContainsFold(FieldLocation, v))
}

// DeviceEQ applies the EQ predicate on the "device" field.
func DeviceEQ(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldDevice, v))
}

// DeviceNEQ applies the NEQ predicate on the "device" field.
func DeviceNEQ(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNEQ(FieldDevice, v))
}

// DeviceIn applies the In predicate on the "device" field.
func DeviceIn(vs ...string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldIn(FieldDevice, vs...))
}

// DeviceNotIn applies the NotIn predicate on the "device" field.
func DeviceNotIn(vs ...string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNotIn(FieldDevice, vs...))
}

// DeviceGT applies the GT predicate on the "device" field.
func DeviceGT(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGT(FieldDevice, v))
}

// DeviceGTE applies the GTE predicate on the "device" field.
func DeviceGTE(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGTE(FieldDevice, v))
}

// DeviceLT applies the LT predicate on the "device" field.
func DeviceLT(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLT(FieldDevice, v))
}

// DeviceLTE applies the LTE predicate on the "device" field.
func DeviceLTE(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLTE(FieldDevice, v))
}

// DeviceContains applies the Contains predicate on the "device" field.
func DeviceContains(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldContains(FieldDevice, v))
}

// DeviceHasPrefix applies the HasPrefix predicate on the "device" field.
func DeviceHasPrefix(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldHasPrefix(FieldDevice, v))
}

// DeviceHasSuffix applies the HasSuffix predicate on the "device" field.
func DeviceHasSuffix(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldHasSuffix(FieldDevice, v))
}

// DeviceIsNil applies the IsNil predicate on the "device" field.
func DeviceIsNil() predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldIsNull(FieldDevice))
}

// DeviceNotNil applies the NotNil predicate on the "device" field.
func DeviceNotNil() predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNotNull(FieldDevice))
}

// DeviceEqualFold applies the EqualFold predicate on the "device" field.
func DeviceEqualFold(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEqualFold(FieldDevice, v))
}

// DeviceContainsFold applies the ContainsFold predicate on the "device" field.
func DeviceContainsFold(v string) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldContainsFold(FieldDevice, v))
}

// ScannedAtEQ applies the EQ predicate on the "scanned_at" field.
func ScannedAtEQ(v time.Time) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldEQ(FieldScannedAt, v))
}

// ScannedAtNEQ applies the NEQ predicate on the "scanned_at" field.
func ScannedAtNEQ(v time.Time) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNEQ(FieldScannedAt, v))
}

// ScannedAtIn applies the In predicate on the "scanned_at" field.
func ScannedAtIn(vs ...time.Time) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldIn(FieldScannedAt, vs...))
}

// ScannedAtNotIn applies the NotIn predicate on the "scanned_at" field.
func ScannedAtNotIn(vs ...time.Time) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldNotIn(FieldScannedAt, vs...))
}

// ScannedAtGT applies the GT predicate on the "scanned_at" field.
func ScannedAtGT(v time.Time) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGT(FieldScannedAt, v))
}

// ScannedAtGTE applies the GTE predicate on the "scanned_at" field.
func ScannedAtGTE(v time.Time) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldGTE(FieldScannedAt, v))
}

// ScannedAtLT applies the LT predicate on the "scanned_at" field.
func ScannedAtLT(v time.Time) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLT(FieldScannedAt, v))
}

// ScannedAtLTE applies the LTE predicate on the "scanned_at" field.
func ScannedAtLTE(v time.Time) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.FieldLTE(FieldScannedAt, v))
}

// HasQrCode applies the HasEdge predicate on the "qr_code" edge.
func HasQrCode() predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, QrCodeTable, QrCodeColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasQrCodeWith applies the HasEdge predicate on the "qr_code" edge with a given conditions (other predicates).
func HasQrCodeWith(preds ...predicate.QRCode) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(func(s *sql.Selector) {
		step := newQrCodeStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.QRCodeAnalytics) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.QRCodeAnalytics) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.QRCodeAnalytics) predicate.QRCodeAnalytics {
	return predicate.QRCodeAnalytics(sql.NotPredicates(p))
}
